@model Examino.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "ui form", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>S'incrire.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "in red message" })
    <div class="field">
        @Html.LabelFor(m => m.Email)
            @Html.TextBoxFor(m => m.Email)
    </div>
    <div class="field">
        @Html.LabelFor(m => m.Password)
            @Html.PasswordFor(m => m.Password)
    </div>
    <div class="field">
        @Html.LabelFor(m => m.ConfirmPassword)
            @Html.PasswordFor(m => m.ConfirmPassword)
    </div>
    <div class="field">
        @Html.LabelFor(m => m.FirstName)
            @Html.EditorFor(m => m.FirstName)
    </div>
    <div class="field">
        @Html.LabelFor(m => m.LastName)
            @Html.EditorFor(m => m.LastName)
    </div>
    <div class="field">
        @Html.LabelFor(m => m.CodeUser)
            @Html.EditorFor(m => m.CodeUser)
    </div>
    <div class="field">
        @Html.LabelFor(m => m.Role)
        @Html.DropDownListFor(m => m.Role, (IEnumerable<SelectListItem>) ViewBag.Roles)
    </div>
    @Html.HiddenFor(m => m.Photo)
    <div class="field">
        @Html.LabelFor(m => m.Photo)
        <div class="col-md-10">
            <img src="@Model.Photo" alt="photo" width="64" height="64" id="imageId" />
            @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "in red message" })
            <label class="ui blue basic button" for="fileinput">
                <input id="fileinput" type="file" style="display: none;" onchange="upload_photo(this)" />
                Changer
            </label>
        </div>
    </div>


    <div class="field">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="ui primary button" value="S'incrire" />
        </div>
    </div>
}

@section scripts
{
    <script>
        function upload_photo(input) {
            var image = document.getElementById("imageId");
            var filename = document.getElementById("Photo");
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function(e) {
                    image.src = e.target.result;
                    image.onload = function() {
                        filename.value = image.src;
                    }
                };
                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
